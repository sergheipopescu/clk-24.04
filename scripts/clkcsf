#!/bin/bash

###
## Variables and functions
###

set -a	# export all variables

csfdir=/etc/csf

readport() {

	grep "$direction" "$csfdir/csf.conf" | cut -d'"' -f 2
}

writeport() {

#	readport=$(grep "$direction" "$csfdir/csf.conf" | cut -d'"' -f 2)					# read current port list
	portsort=$(echo "$(readport)",$((10#${port})) | tr ',' '\n' | sort -n | uniq | paste -sd',' -)	# append new port, sort port numbers, remove duplicates
	sed -i "/$direction/c$direction \"${portsort}\"" "$csfdir/csf.conf"					# write
	echo
	echo -e "Port number \033[0;36m$((10#${port}))\033[0m opened"
}


openport() {

	for port in $OPTARG; do

		if [[ "$port" =~ ^[0-9]+$ ]] && [ "$port" -ge 1 ] && [ "$port" -le 65535 ]; then		# check if argument is a port number

			writeport
		else
			echo
			echo -e "\n \033[1;91m Wrong port number format:\033[0m\033[0;31m $port\033[0m"		# print error
			echo
		fi
	done
}


function valid_ip() {

	local  ip=$1
	local  stat=1

	if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
		OIFS=$IFS
 		IFS='.'
		# shellcheck disable=SC2206
		ip=($ip)
		IFS=$OIFS
		[[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
		&& ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
		stat=$?
	fi
	return $stat
}


addip () {

	for ipaddr in $OPTARG; do

		if valid_ip "$ipaddr"; then

			if grep -q "$ipaddr" "$csfdir/$csfile"; then

				:

			else
				echo
				echo -e "$ipaddr" | tee --append "$csfdir/$csfile" > /dev/null
				echo -e "\n \033[1;92m Successfully\033[0m added $ipaddr to $csfile"
			
			fi

		else
			echo
			echo -e "\n \033[1;91m Wrong ip address format:\033[0m\033[0;31m $ipaddr\033[0m"

		fi
	done
}


help () {

	echo
	echo "clkcsf usage: -i <incomig port>; -o <outgoing port>; -i <ignore IP>; -a <allow IP>"
	echo
}


###
## Flags
###

while getopts ":a:g:i:o:" flag; do

	case "${flag}" in

		i) 	direction="TCP_IN = "
			openport
			echo
			echo -e "Currently \033[0;32mopen\033[0m incoming ports: $(readport)"
			echo
		;;

		o) 	direction="TCP_OUT = "
			openport
			echo
			echo -e "Currently \033[0;32mopen\033[0m outgoing ports: $(readport)"
			echo
		;;

		g) 	csfile=csf.ignore
			addip
			echo
			echo
			echo -e "Currently \033[0;33mignored\033[0m IP addresses:"
			grep -v '#'  "$csfdir/$csfile"
			echo
		;;

		a)	csfile=csf.allow
			addip
			echo
			echo
			echo -e "Currently \033[0;32mallowed\033[0m IP addresses:"
			grep -v '#'  "$csfdir/$csfile"
			echo
		;;

		:)	help
		;;

		*) 	echo -e "\n \033[1;91m Error! Invalid option\033[0m\033[0;31m -$OPTARG\033[0m \n"
			exit
		;;
	esac

done

if [ "$#" == 0 ]; then
        help
        exit 1
fi